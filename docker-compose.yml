version: "3.9"

services:
  redis:
    image: redis:7.2.5-alpine3.19
    ports:
      - "6379:6379"
    networks:
      - my_network

  library_app:
    container_name: library-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/library_app
    env_file:
      - .env
    command: > 
      sh -c "python manage.py wait_for_db_script && 
      python manage.py migrate && 
      python manage.py loaddata sample.json &&
      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - redis
      - db
    networks:
      - my_network

  celery_worker:
    container_name: celery-worker
    build:
      context: .
    command: celery -A LibraryService worker -l INFO
    volumes:
      - ./:/library_app
    env_file:
      - .env
    depends_on:
      - library_app
    networks:
      - my_network

  celery_beat:
    container_name: celery-beat
    build:
      context: .
    command: > 
      celery -A LibraryService beat -l INFO --scheduler 
      django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./:/library_app
      - ./celerybeat-schedule:/app/celerybeat-schedule
    env_file:
      - .env
    depends_on:
      - library_app
    networks:
      - my_network

  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db:$PGDATA
    networks:
      - my_network

volumes:
  db:

networks:
  my_network:
    driver: bridge
